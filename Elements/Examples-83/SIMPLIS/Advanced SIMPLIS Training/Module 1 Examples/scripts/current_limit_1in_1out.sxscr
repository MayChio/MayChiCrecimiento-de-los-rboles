***
*** script auto-generated from testplan: current_limit_1in_1out.testplan
***
Arguments @retval label report_dir log_file controlhandle

Let this_label = 'Current Limit|Summary X-Y Plots|Avg Output Voltage vs Avg Load Current'
if !strstr( label , this_label ) then

	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINMin)' , 'VLOAD(VINMin)' , 'ILOAD(VINMin) VLOAD(VINMin)' , 'DVM VIN Minimum' , 'Output Voltage' , 'A1' , 'voltage' , 'xlabel=Load Current yLabel=Load Voltage xunits=A yunits=V showpoints=true sort=yascend color=green' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINNom)' , 'VLOAD(VINNom)' , 'ILOAD(VINNom) VLOAD(VINNom)' , 'DVM VIN Nominal' , 'Output Voltage' , 'A1' , 'voltage' , 'xlabel=Load Current yLabel=Load Voltage xunits=A yunits=V showpoints=true color=blue sort=yascend' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINMax)' , 'VLOAD(VINMax)' , 'ILOAD(VINMax) VLOAD(VINMax)' , 'DVM VIN Maximum' , 'Output Voltage' , 'A1' , 'voltage' , 'xlabel=Load Current yLabel=Load Voltage xunits=A yunits=V showpoints=true color=red sort=yascend' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementPromoteGraph([ 'Output Voltage' , '100' ] , log_file )

endif


Let this_label = 'Current Limit|Summary X-Y Plots|Inductor Currents vs Avg Load Current'
if !strstr( label , this_label ) then

	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINMin)' , 'il_max(VINMin)' , 'ILOAD(VINMin) il_max(VINMin)' , 'DVM IMax @ VIN Minimum' , 'Inductor Currents' , 'A1' , 'currents' , 'xlabel=Load Current yLabel=Inductor Currents xunits=A yunits=A showpoints=true color=green' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINNom)' , 'il_max(VINNom)' , 'ILOAD(VINNom) il_max(VINNom)' , 'DVM IMax @ VIN Nominal' , 'Inductor Currents' , 'A1' , 'currents' , 'xlabel=Load Current yLabel=Inductor Currents xunits=A yunits=A showpoints=true color=blue' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINMax)' , 'il_max(VINMax)' , 'ILOAD(VINMax) il_max(VINMax)' , 'DVM IMax @ VIN Maximum' , 'Inductor Currents' , 'A1' , 'currents' , 'xlabel=Load Current yLabel=Inductor Currents xunits=A yunits=A showpoints=true color=red' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementPromoteGraph([ 'Inductor Currents' , '90' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINMin)' , 'il_min(VINMin)' , 'ILOAD(VINMin) il_min(VINMin)' , 'DVM Imin @ VIN Minimum' , 'Inductor Currents' , 'A1' , 'currents' , 'xlabel=Load Current yLabel=Inductor Currents xunits=A yunits=A showpoints=true color=green' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINNom)' , 'il_min(VINNom)' , 'ILOAD(VINNom) il_min(VINNom)' , 'DVM Imin @ VIN Nominal' , 'Inductor Currents' , 'A1' , 'currents' , 'xlabel=Load Current yLabel=Inductor Currents xunits=A yunits=A showpoints=true color=blue' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINMax)' , 'il_min(VINMax)' , 'ILOAD(VINMax) il_min(VINMax)' , 'DVM Imin @ VIN Maximum' , 'Inductor Currents' , 'A1' , 'currents' , 'xlabel=Load Current yLabel=Inductor Currents xunits=A yunits=A showpoints=true color=red' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINMin)' , 'il_max(VINMin) - il_min(VINMin)' , 'ILOAD(VINMin) il_max(VINMin) il_min(VINMin)' , 'DVM IPk2Pk @ VIN Minimum' , 'Inductor Currents' , 'A2' , 'currents' , 'xlabel=Load Current yLabel=Pk-Pk Inductor Current xunits=A yunits=A showpoints=true color=green' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINNom)' , 'il_max(VINNom) - il_min(VINNom)' , 'ILOAD(VINNom) il_max(VINNom) il_min(VINNom)' , 'DVM IPk2Pk @ VIN Nominal' , 'Inductor Currents' , 'A2' , 'currents' , 'xlabel=Load Current yLabel=Pk-Pk Inductor Current xunits=A yunits=A showpoints=true color=blue' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINMax)' , 'il_max(VINMax) - il_min(VINMax)' , 'ILOAD(VINMax) il_max(VINMax) il_min(VINMax)' , 'DVM IPk2Pk @ VIN Maximum' , 'Inductor Currents' , 'A2' , 'currents' , 'xlabel=Load Current yLabel=Pk-Pk Inductor Current xunits=A yunits=A showpoints=true color=red' ] , log_file )

endif


Let this_label = 'Current Limit|Summary X-Y Plots|Switching Frequency vs Avg Load Current'
if !strstr( label , this_label ) then

	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINMin)' , 'sw_freq(VINMin)' , 'ILOAD(VINMin) sw_freq(VINMin)' , 'DVM SW Frequency @ VIN Minimum' , 'Switching Frequency' , 'A1' , 'frequency' , 'xlabel=Load Current yLabel=Switching Frequency xunits=A yunits=Hz showpoints=true color=green sort=yascend' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINNom)' , 'sw_freq(VINNom)' , 'ILOAD(VINNom) sw_freq(VINNom)' , 'DVM SW Frequency @ VIN Nominal' , 'Switching Frequency' , 'A1' , 'frequency' , 'xlabel=Load Current yLabel=Switching Frequency xunits=A yunits=Hz showpoints=true color=blue sort=yascend' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementCreateXYScalarPlot([ 'ILOAD(VINMax)' , 'sw_freq(VINMax)' , 'ILOAD(VINMax) sw_freq(VINMax)' , 'DVM SW Frequency @ VIN Maximum' , 'Switching Frequency' , 'A1' , 'frequency' , 'xlabel=Load Current yLabel=Switching Frequency xunits=A yunits=Hz showpoints=true color=red sort=yascend' ] , log_file )
	Let ignoreme = SimplisDVMAdvancedUtilMeasurementPromoteGraph([ 'Switching Frequency' , '70' ] , log_file )

endif


